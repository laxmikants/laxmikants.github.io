<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Regular Expression on Laxmikant Soni</title><link>https://laxmikants.github.io/tags/regular-expression/</link><description>Recent content in Regular Expression on Laxmikant Soni</description><generator>Hugo -- gohugo.io</generator><copyright>This work is licensed.</copyright><lastBuildDate>Sat, 05 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://laxmikants.github.io/tags/regular-expression/index.xml" rel="self" type="application/rss+xml"/><item><title>Regular expressions</title><link>https://laxmikants.github.io/post/regular-expressions-for-pattern-recognition/</link><pubDate>Sat, 05 Mar 2016 00:00:00 +0000</pubDate><guid>https://laxmikants.github.io/post/regular-expressions-for-pattern-recognition/</guid><description>HUGOMORE42 Regular expressions are a concise and flexible tool for describing patterns in strings. This post describes the key features of stringr’s regular expressions, as implemented by stringi. It is not a tutorial, so if you’re unfamiliar regular expressions, I’d recommend starting at http://r4ds.had.co.nz/strings.html. If you want to master the details, I’d recommend reading the classic Mastering Regular Expressions by Jeffrey E. F. Fried.
Regular expressions are the default pattern engine in stringr.</description></item></channel></rss>